---
services:
  oauth2-proxy:
    container_name: oauth2-proxy
    image: quay.io/oauth2-proxy/oauth2-proxy:latest
    restart: unless-stopped
    environment:
      OAUTH2_PROXY_HTTP_ADDRESS: '0.0.0.0:4180'
      OAUTH2_PROXY_PASS_BASIC_AUTH: false
      OAUTH2_PROXY_PASS_USER_HEADERS: true
      # OAUTH2_PROXY_COOKIE_SECRET: '< COOKIE SECRET >'
      # OAUTH2_PROXY_COOKIE_DOMAINS: '.example.com' # Required so cookie can be read on all subdomains.
      # OAUTH2_PROXY_WHITELIST_DOMAINS: '.example.com' # Required to allow redirection back to original requested target.
      # Configure to use Keycloak
      # OAUTH2_PROXY_PROVIDER: 'oidc'
      # OAUTH2_PROXY_CLIENT_ID: 'oauth2-proxy'
      # OAUTH2_PROXY_CLIENT_SECRET: '< CLIENT SECRET >'
      # OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      # OAUTH2_PROXY_OIDC_ISSUER_URL: 'https://auth.example.com/realms/master'
    # OAUTH2_PROXY_REDIRECT_URL: 'https://auth.example.com/oauth2/callback'
      # GITHUB OAUTH
      OAUTH2_PROXY_PROVIDER: github
      OAUTH2_PROXY_PROVIDER_DISPLAY_NAME: "GitHub - Oauth 2 Proxy"
      OAUTH2_PROXY_CLIENT_ID: $GITHUB_CLIENT_ID
      OAUTH2_PROXY_CLIENT_SECRET: $GITHUB_CLIENT_SECRET
      # Allow the cookie to be used for the whole domain
      OAUTH2_PROXY_COOKIE_DOMAIN: $ROOT_FQDN
      OAUTH2_PROXY_COOKIE_SECRET: $GITHUB_COOKIE_SECRET
      OAUTH2_PROXY_COOKIE_REFRESH: 12h
      OAUTH2_PROXY_COOKIE_EXPIRE: 48h
      # OAUTH2_PROXY_COOKIE_HTTPONLY: false
      OAUTH2_PROXY_COOKIE_SECURE: true
      OAUTH2_PROXY_REDIRECT_URL: 'https://${FQDN}/oauth2/callback'
      OAUTH2_PROXY_EMAIL_DOMAINS: '*'
      OAUTH2_PROXY_REVERSE_PROXY: true
      OAUTH2_PROXY_SHOW_DEBUG_ON_ERROR: true
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: true
      # OAUTH2_PROXY_COOKIE_CSRF_PER_REQUEST: true
      # OAUTH2_PROXY_COOKIE_CSRF_EXPIRE: '5m'
      # OAUTH2_PROXY_CUSTOM_TEMPLATES_DIR: "/templates"
    # volumes:
    #   - ./conf/oauth2-proxy/templates:/templates:ro
    labels:
      traefik.enable: true
      traefik.http.routers.oauth2-proxy.entrypoints: websecure
      traefik.http.routers.oauth2-proxy.rule: "Host(`${FQDN}`)"
      traefik.http.routers.oauth2-proxy.tls: true
      traefik.http.routers.oauth2-proxy.tls.certresolver: cloudflare
      traefik.http.services.oauth2-proxy.loadbalancer.server.port: 4180
      # traefik.http.middlewares.oauth-proxy-verify.forwardAuth.address: http://oauth2-proxy:4180/oauth2/auth
      # traefik.http.middlewares.oauth-proxy-verify.forwardAuth.authResponseHeaders: X-Auth-Request-User,X-Auth-Request-Email,Set-Cookie
      # traefik.http.middlewares.oauth-proxy-verify.forwardAuth.trustForwardHeader: 'true'
      # traefik.http.middlewares.oauth-proxy-signin.errors.service: oauth@docker
      # traefik.http.middlewares.oauth-proxy-signin.errors.query: /oauth2/sign_in
      # traefik.http.middlewares.oauth-proxy-signin.errors.status: '401'
    networks:
      - frontend
      - backend

networks:
  frontend:
    external: true
  backend:
    external: true
