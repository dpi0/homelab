---
services:
  paperless-ngx-redis:
    container_name: paperless-ngx-redis
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - $VOLUME/paperless-ngx/redis/data:/data
    expose:
      - 6379
    networks:
      - backend

  paperless-ngx-server:
    container_name: paperless-ngx-server
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    environment:
      PAPERLESS_REDIS: redis://paperless-ngx-redis:6379
    env_file: .env
    volumes:
      - $VOLUME/paperless-ngx/data:/usr/src/paperless/data
      - $VOLUME/paperless-ngx/export:/usr/src/paperless/export
      - $VOLUME/paperless-ngx/consume:/usr/src/paperless/consume
      - $DOCUMENTS:/usr/src/paperless/media
    labels:
      traefik.enable: true
      traefik.http.routers.paperless-ngx.entrypoints: websecure
      traefik.http.routers.paperless-ngx.rule: "Host(`${FQDN}`)"
      traefik.http.routers.paperless-ngx.tls: true
      traefik.http.routers.paperless-ngx.tls.certresolver: cloudflare
      # traefik.http.routers.paperless-ngx.middlewares: tinyauth
      traefik.http.services.paperless-ngx.loadbalancer.server.port: 8000
      com.centurylinklabs.watchtower.enable: true
    depends_on:
      - paperless-ngx-redis
    networks:
      - frontend
      - backend

networks:
  frontend:
    external: true
  backend:
    external: true
