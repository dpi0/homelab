---
services:
  paperless-ngx-redis:
    container_name: paperless-ngx-redis
    image: docker.io/library/redis:8
    restart: unless-stopped
    volumes:
      - $VOLUME/paperless-ngx/redis/data:/data
    expose:
      - 6379
    networks:
      - backend

  paperless-ngx-server:
    container_name: paperless-ngx-server
    image: ghcr.io/paperless-ngx/paperless-ngx:latest
    restart: unless-stopped
    environment:
      PAPERLESS_REDIS: redis://paperless-ngx-redis:6379
    env_file: .env
    volumes:
      - $VOLUME/paperless-ngx/data:/usr/src/paperless/data
      - $VOLUME/paperless-ngx/export:/usr/src/paperless/export
      - $VOLUME/paperless-ngx/consume:/usr/src/paperless/consume
      - $DOCUMENTS:/usr/src/paperless/media
    labels:
      traefik.enable: true
      traefik.http.routers.paperless-ngx.entrypoints: websecure
      traefik.http.routers.paperless-ngx.rule: "Host(`${FQDN}`)"
      traefik.http.routers.paperless-ngx.tls: true
      traefik.http.routers.paperless-ngx.service: paperless-ngx
      traefik.http.routers.paperless-ngx.tls.certresolver: cloudflare
      traefik.http.services.paperless-ngx.loadbalancer.server.port: 8000

      traefik.http.routers.paperless-ngx-tailscale.entryPoints: websecure
      traefik.http.routers.paperless-ngx-tailscale.rule: "Host(`${FQDN_TAILSCALE}`)"
      traefik.http.routers.paperless-ngx-tailscale.service: paperless-ngx-tailscale
      traefik.http.routers.paperless-ngx-tailscale.tls: true
      traefik.http.routers.paperless-ngx-tailscale.tls.certresolver: cloudflare
      traefik.http.services.paperless-ngx-tailscale.loadbalancer.server.port: 8000

      com.centurylinklabs.watchtower.enable: true
    depends_on:
      - paperless-ngx-redis
    networks:
      - frontend
      - backend

  paperless-backup:
    container_name: paperless-backup
    image: alpine:latest
    restart: unless-stopped
    volumes:
      - $VOLUME/paperless-ngx/data:/data:ro
      - $VOLUME/paperless-ngx/backups:/backups
    # takes paperless-ngx backup every 6h
    command: >
      sh -c "
        apk add --no-cache sqlite tzdata &&
        mkdir -p /backups &&
        echo '0 */6 * * * sqlite3 /data/db.sqlite3 \".backup /backups/paperless-backup-\$$(date +\\%Y\\%m\\%d-\\%H\\%M\\%S).db\"' > /var/spool/cron/crontabs/root &&
        # Then start cron daemon
        crond -f
      "
    # to manually run: ` docker exec paperless-backup sh -c "sqlite3 /data/db.sqlite3 '.backup /backups/paperless-backup-TEST.db'"`
    # `docker exec paperless-backup ls -lah /backups`
    # verify backup integrity: `docker exec paperless-backup sqlite3 /backups/paperless-backup-TEST.db ".tables"`
    networks:
      - backend

networks:
  frontend:
    external: true
  backend:
    external: true
