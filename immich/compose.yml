#
# WARNING: Make sure to use the docker-compose.yml of the current release:
#
# https://github.com/immich-app/immich/releases/latest/download/docker-compose.yml
#
# The compose file on main may not be compatible with the latest release.
#

name: immich

services:
  immich-server:
    container_name: immich-server
    image: ghcr.io/immich-app/immich-server:${IMMICH_VERSION:-release}
    restart: unless-stopped
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    labels:
      traefik.enable: true
      traefik.http.routers.immich-server-https.entrypoints: websecure
      traefik.http.routers.immich-server-https.rule: "Host(`${FQDN}`)"
      traefik.http.routers.immich-server-https.tls: true
      traefik.http.routers.immich-server-https.tls.certresolver: cloudflare
      # traefik.http.routers.immich-server-https.middlewares: tinyauth
      traefik.http.services.immich-server.loadbalancer.server.port: 2283

      traefik.http.routers.immich-server-tailscale-https.rule: "Host(`${FQDN_TAILSCALE}`)"
      traefik.http.routers.immich-server-tailscale-https.entryPoints: websecure
      traefik.http.routers.immich-server-tailscale-https.tls: true
      traefik.http.routers.immich-server-tailscale-https.tls.certresolver: cloudflare
      traefik.http.services.immich-server-tailscale-https.loadbalancer.server.port: 2283
      # traefik.http.routers.glance-tailscale.middlewares: tinyauth

      com.centurylinklabs.watchtower.enable: true
    # extends:
    #   file: hwaccel.transcoding.yml
    #   service: cpu # set to one of [nvenc, quicksync, rkmpp, vaapi, vaapi-wsl] for accelerated transcoding
    volumes:
      # Do not edit the next line. If you want to change the media storage location on your system, edit the value of UPLOAD_LOCATION in the .env file
      - ${UPLOAD_LOCATION}:/usr/src/app/upload
      - ${EXT_PHOTOS}:/usr/src/app/ext_photos:ro
      - ${EXT_VIDEOS}:/usr/src/app/ext_videos:ro
      - /etc/localtime:/etc/localtime:ro
    env_file:
      - .env
    depends_on:
      - redis
      - database
    healthcheck:
      disable: false
    ports:
      - $INTERNAL_PORT:2283
    networks:
      - frontend
      - backend

  # immich-machine-learning:
  #   container_name: immich-machine-learning
  #   # For hardware acceleration, add one of -[armnn, cuda, rocm, openvino, rknn] to the image tag.
  #   # Example tag: ${IMMICH_VERSION:-release}-cuda
  #   image: ghcr.io/immich-app/immich-machine-learning:${IMMICH_VERSION:-release}
  #   # extends: # uncomment this section for hardware acceleration - see https://immich.app/docs/features/ml-hardware-acceleration
  #   #   file: hwaccel.ml.yml
  #   #   service: cpu # set to one of [armnn, cuda, rocm, openvino, openvino-wsl, rknn] for accelerated inference - use the `-wsl` version for WSL2 where applicable
  #   volumes:
  #     - model-cache:/cache
  #   env_file:
  #     - .env
  #   restart: unless-stopped
  #   healthcheck:
  #     disable: false

  redis:
    container_name: immich-redis
    image: docker.io/valkey/valkey:8-bookworm@sha256:42cba146593a5ea9a622002c1b7cba5da7be248650cbb64ecb9c6c33d29794b1
    restart: unless-stopped
    healthcheck:
      test: redis-cli ping || exit 1
    networks:
      - backend

  database:
    container_name: immich-postgres-db
    image: docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0@sha256:739cdd626151ff1f796dc95a6591b55a714f341c737e27f045019ceabf8e8c52
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_DATABASE_NAME}
      POSTGRES_INITDB_ARGS: '--data-checksums'
    volumes:
      # Do not edit the next line. If you want to change the database storage location on your system, edit the value of DB_DATA_LOCATION in the .env file
      - ${DB_DATA_LOCATION}:/var/lib/postgresql/data
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
    restart: unless-stopped

volumes:
  model-cache:

networks:
  frontend:
    external: true
  backend:
    external: true
